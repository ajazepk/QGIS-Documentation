# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-20 16:48\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# e8b1d775836f47079f5868033acdd824
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:9
msgid "Using Vector Layers"
msgstr ""

# dfd668befff9473694c03ed0f7c4443f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:11
msgid ""
"This section summarizes various actions that can be done with vector layers."
msgstr ""

# e1f25ec2266a46d6bf7c23d177224c69
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:18
msgid "Iterating over Vector Layer"
msgstr ""

# 7a4addf1b24443ce8c9593e47e7a108e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:20
msgid ""
"Below is an example how to go through the features of the layer. To read "
"features from layer, initialize the retieval with :func:`select` and then "
"use :func:`nextFeature` calls::"
msgstr ""

# 2ee69259377b493da35b233e1e5d48eb
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:64
msgid ""
":func:`select` gives you flexibility in what data will be fetched. It can "
"get 4 arguments, all of them are optional:"
msgstr ""

# 6c4e6e432798452993f5d06b112462db
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:67
msgid "fetchAttributes"
msgstr ""

# 8d25b6fa347045789af5a36c8d1f6472
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:68
msgid "List of attributes which should be fetched. Default: empty list"
msgstr ""

# bb741403e6fb44bc8c1fcf98e1519770
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:70
msgid "rect"
msgstr ""

# 350de8d0469f4650a7b10a502be468a1
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:70
msgid ""
"Spatial filter. If empty rect is given (:obj:`QgsRectangle()`), all features "
"are fetched. Default: empty rect"
msgstr ""

# 756acee167474f8696f5bb654658ee30
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:72
msgid "fetchGeometry"
msgstr ""

# f4ae0572423c4875b2bb13b43e563873
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:73
msgid ""
"Whether geometry of the feature should be fetched. Default: :const:`True`"
msgstr ""

# 6cc53667b9814f5ab4e7b80297700a80
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:78
msgid "useIntersect"
msgstr ""

# 6dcc038e1a794a659fb961256044dbf7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:75
msgid ""
"When using spatial filter, this argument says whether accurate test for "
"intersection should be done or whether test on bounding box suffices. This "
"is needed e.g. for feature identification or selection. Default: :const:"
"`False`"
msgstr ""

# 12aa1e11bf604726b8aeb64b99d34582
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:80
msgid "Some examples::"
msgstr ""

# f050f93a2b8a4f37919120e26ee47f2e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:92
msgid ""
"To obtain field index from its name, use provider's :func:`fieldNameIndex` "
"function::"
msgstr ""

# 745f0580e08d49228cf6225eb803b8aa
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:104
msgid "Modifying Vector Layers"
msgstr ""

# 798138111d95476195bf00f1f02084e8
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:106
msgid ""
"Most vector data providers support editing of layer data. Sometimes they "
"support just a subset of possible editing actions. Use the :func:"
"`capabilities` function to find out what set of functionality is supported::"
msgstr ""

# aaa4254fe5224ff28fca8bfefa214148
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:112
msgid ""
"By using any of following methods for vector layer editing, the changes are "
"directly committed to the underlying data store (a file, database etc). In "
"case you would like to do only temporary changes, skip to the next section "
"that explains how to do :ref:`modifications with editing buffer <editing-"
"buffer>`."
msgstr ""

# 449db5d6d8cd4f41bf36bb5bbf002ca5
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:118
msgid "Add Features"
msgstr ""

# 34cd0b9953884db8a47c652631521e29
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:120
msgid ""
"Create some :class:`QgsFeature` instances and pass a list of them to "
"provider's :func:`addFeatures` method. It will return two values: result "
"(true/false) and list of added features (their ID is set by the data store)::"
msgstr ""

# b9c349e293944f59b74800035da78a11
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:132
msgid "Delete Features"
msgstr ""

# 230248cae6c243c193ee1e473b8490c2
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:134
msgid "To delete some features, just provide a list of their feature IDs::"
msgstr ""

# 01ee9eeca1b041508bfa89cdf4d1f481
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:140
msgid "Modify Features"
msgstr ""

# 6ca5a54d9a364a59b3df8c7e8cfea8fa
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:142
msgid ""
"It is possible to either change feature's geometry or to change some "
"attributes. The following example first changes values of attributes with "
"index 0 and 1, then it changes the feature's geometry::"
msgstr ""

# cdc1175f79464d3abdd6e6bae5d55087
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:157
msgid "Adding and Removing Fields"
msgstr ""

# 819b308954744531914638a689a820a5
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:159
msgid ""
"To add fields (attributes), you need to specify a list of field defnitions. "
"For deletion of fields just provide a list of field indexes. ::"
msgstr ""

# 225e8deba3e447ccac220052c3476cee
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:173
msgid "Modifying Vector Layers with an Editing Buffer"
msgstr ""

# 9263c2a78058472cac3cb896f3212bb5
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:175
msgid ""
"When editing vectors within QGIS application, you have to first start "
"editing mode for a particular layer, then do some modifications and finally "
"commit (or rollback) the changes. All the changes you do are not written "
"until you commit them --- they stay in layer's in-memory editing buffer. It "
"is possible to use this functionality also programmatically --- it is just "
"another method for vector layer editing that complements the direct usage of "
"data providers. Use this option when providing some GUI tools for vector "
"layer editing, since this will allow user to decide whether to commit/"
"rollback and allows the usage of undo/redo. When committing changes, all "
"changes from the editing buffer are saved to data provider."
msgstr ""

# 5264cec8a2614e65bdef8773eb7bb163
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:186
msgid ""
"To find out whether a layer is in editing mode, use :func:`isEditing` --- "
"the editing functions work only when the editing mode is turned on. Usage of "
"editing functions::"
msgstr ""

# 384d78fb4e524172bc0b6dc4a648d3e8
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:205
msgid ""
"In order to make undo/redo work properly, the above mentioned calls have to "
"be wrapped into undo commands. (If you do not care about undo/redo and want "
"to have the changes stored immediately, then you will have easier work by :"
"ref:`editing with data provider <editing>`.) How to use the undo "
"functionality ::"
msgstr ""

# 1631c275a80541ca8ec612ed74bd9303
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:223
msgid ""
"The :func:`beginEndCommand` will create an internal \"active\" command and "
"will record subsequent changes in vector layer. With the call to :func:"
"`endEditCommand` the command is pushed onto the undo stack and the user will "
"be able to undo/redo it from GUI. In case something went wrong while doing "
"the changes, the :func:`destroyEditCommand` method will remove the command "
"and rollback all changes done while this command was active."
msgstr ""

# c45515c969f44b7e84725b9a28cbc5bb
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:230
msgid ""
"To start editing mode, there is :func:`startEditing` method, to stop editing "
"there are :func:`commitChanges` and :func:`rollback()` --- however normally "
"you should not need these methods and leave this functionality to be "
"triggered by the user."
msgstr ""

# 3ee5095a2e824056a141b850104f908c
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:239
msgid "Using Spatial Index"
msgstr ""

# 32ad2ab5178247689a2b0b87c41187d9
# ee68c41ca1ca474cb991426b38f55c59
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:242
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:916
msgid "**TODO:**"
msgstr ""

# e31f0da864e0413da29e2c5f1aa661d8
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:242
msgid "Intro to spatial indexing"
msgstr ""

# 8ddfe1b5a9754ee08f11e358dbb69daa
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:244
msgid "create spatial index --- the following code creates an empty index::"
msgstr ""

# 30a6d375a25b4bc0af2f5a8c47fbf529
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:248
msgid ""
"add features to index --- index takes :class:`QgsFeature` object and adds it "
"to the internal data structure. You can create the object manually or use "
"one from previous call to provider's :func:`nextFeature()` ::"
msgstr ""

# c664cf5ad4c644d0a516a9b9daa870ec
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:254
msgid ""
"once spatial index is filled with some values, you can do some queries::"
msgstr ""

# 8c5378c266c64896b1f55eab500e2db1
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:266
msgid "Writing Vector Layers"
msgstr ""

# 02582db151ed4b8c9b12c9676ebb3e18
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:268
msgid ""
"You can write vector layer files using :class:`QgsVectorFileWriter` class. "
"It supports any other kind of vector file that OGR supports (shapefiles, "
"GeoJSON, KML and others)."
msgstr ""

# 29c05ceea0e341f3b64fc38a4211c593
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:272
msgid "There are two possibilities how to export a vector layer:"
msgstr ""

# c56f986c39154186a13ba57a7e160383
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:274
msgid "from an instance of :class:`QgsVectorLayer`::"
msgstr ""

# bd54d4139fde48a18aedffcaeab6dc17
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:285
msgid ""
"Third parameter specifies output text encoding. Only some drivers need this "
"for correct operation - shapefiles are one of those --- however in case you "
"are not using international characters you do not have to care much about "
"the encoding. The fourth parameter that we left as None may specify "
"destination CRS --- if a valid instance of :class:"
"`QgsCoordinateReferenceSystem` is passed, the layer is transformed to that "
"CRS."
msgstr ""

# f7d3a5f544634a328ea66c837a205635
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:292
msgid ""
"For valid driver names please consult the `supported formats by OGR`_ --- "
"you should pass the value in \"Code\" column as the driver name. Optionally "
"you can set whether to export only selected features, pass further driver-"
"specific options for creation or tell the writer not to create attributes "
"--- look into the documentation for full syntax."
msgstr ""

# 5eabd24827d74c448feea69d9444ffa1
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:301
msgid "directly from features::"
msgstr ""

# e27b46bde65d43b788fe3c04856e93b3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:332
msgid "Memory Provider"
msgstr ""

# a6dd6ccad6ea480683e5e484549fc791
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:334
msgid ""
"Memory provider is intended to be used mainly by plugin or 3rd party app "
"developers. It does not store data on disk, allowing developers to use it as "
"a fast backend for some temporary layers."
msgstr ""

# 6fb2abd089ed4ad6b46e1da1fba19fef
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:338
msgid "The provider supports string, int and double fields."
msgstr ""

# 75e3c4b1df4642f7b42be9c7a55ef543
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:340
msgid ""
"The memory provider also supports spatial indexing, which is enabled by "
"calling the provider's :func:`createSpatialIndex` function. Once the spatial "
"index is created you will be able to iterate over features within smaller "
"regions faster (since it's not necessary to traverse all the features, only "
"those in specified rectangle)."
msgstr ""

# c424f8f253504763aabd1fd31b6a591e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:346
msgid ""
"A memory provider is created by passing ``\"memory\"`` as the provider "
"string to the :class:`QgsVectorLayer` constructor."
msgstr ""

# 9695f711e53a4b9f9cfd33155ebe5c06
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:349
msgid ""
"The constructor also takes a URI defining the geometry type of the layer, "
"one of: ``\"Point\"``, ``\"LineString\"``, ``\"Polygon\"``, ``\"MultiPoint"
"\"``, ``\"MultiLineString\"``, or ``\"MultiPolygon\"``."
msgstr ""

# 9c0a98cd603242b882033d445ca0afe3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:353
msgid ""
"From QGIS version 1.7 the URI can also specify the coordinate reference "
"system, fields, and indexing of the memory provider in the URI. The syntax "
"is:"
msgstr ""

# e1b6d419b0e843149f34f931d7a6f6e7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:358
msgid "crs=definition"
msgstr ""

# a5439e6a66dd451dbcc431eccfbdd4e8
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:357
msgid ""
"Specifies the coordinate reference system, where definition may be any of "
"the forms accepted by :func:`QgsCoordinateReferenceSystem.createFromString`"
msgstr ""

# 5c0371db00f84bef89b579ac3d38ddbc
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:361
msgid "index=yes"
msgstr ""

# fc5b8ea0fb76459e8886425c8f85ac15
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:361
msgid "Specifies that the provider will use a spatial index"
msgstr ""

# fe8c466f4bfc4705b3781618680c88ac
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:366
msgid "field=name:type(length,precision)"
msgstr ""

# 686a9f9f24194b149a045c453dd662f5
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:364
msgid ""
"Specifies an attribute of the layer.  The attribute has a name, and "
"optionally a type (integer, double, or string), length, and precision. There "
"may be multiple field definitions."
msgstr ""

# 42a8dbe1496e4aa9804584f6453f1a62
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:368
msgid "The following example of a URI incorporates all these options::"
msgstr ""

# e22bd564636a4b0b95f0b437f90060ed
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:372
msgid ""
"The following example code illustrates creating and populating a memory "
"provider::"
msgstr ""

# 09f2c57f015e4d29abf36946871dda69
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:395
msgid "Finally, let's check whether everything went well::"
msgstr ""

# 772913e1ea4c4569829088d40a9616f3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:412
msgid "Appearance (Symbology) of Vector Layers"
msgstr ""

# 8bf4c7135dab4f44bb8d16d0d9695dcc
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:414
msgid ""
"When a vector layer is being rendered, the appearance of the data is given "
"by **renderer** and **symbols** associated with the layer.  Symbols are "
"classes which take care of drawing of visual representation of features, "
"while renderers determine what symbol will be used for a particular feature."
msgstr ""

# 9a14fde47fe04479af35a5f55616746a
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:419
msgid ""
"In QGIS v1,4 a new vector rendering stack has been introduced in order to "
"overcome the limitations of the original implementation. We refer to it as "
"new symbology or symbology-ng (new generation), the original rendering stack "
"is also called old symbology. Each vector layer uses either new symbology or "
"old symbology, but never both at once or neither of them. It's not a global "
"setting for all layers, so some layers might use new symbology while others "
"still use old symbology. In QGIS options the user can specify what symbology "
"should be used by default when layers are loaded.  The old symbology will be "
"kept in further QGIS v1.x releases for compatibility and we plan to remove "
"it in QGIS v2.0."
msgstr ""

# 6245afd8505e401da2655f9380641df9
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:430
msgid "How to find out which implementation is currently in use::"
msgstr ""

# 30d9668067c740279a1e3f79970ed8a0
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:440
msgid ""
"Note: if you plan to support also earlier versions (i.e. QGIS < 1.4), you "
"should first check whether the :func:`isUsingRendererV2` method exists --- "
"if not, only old symbology is available::"
msgstr ""

# 558a4b9e4a7f449bbd6b2a5dabd3df8d
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:447
msgid ""
"We are going to focus primarily on new symbology because it has better "
"capabilities are more options for customization."
msgstr ""

# 28d7258c11724267aacb1fdb4abfbf8d
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:453
msgid "New Symbology"
msgstr ""

# b506feb1126d4506ba318274056690f1
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:455
msgid ""
"Now that we have a reference to a renderer from the previous section, let us "
"explore it a bit::"
msgstr ""

# 6ea33efffa644538a5135f1afe704e9a
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:460
msgid "There are several known renderer types available in QGIS core library:"
msgstr ""

# 3c976251fc024b0dbdd47cca348724d0
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:463
msgid "Type"
msgstr ""

# b12048c1ed0e4cb3be46052fb73e0944
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:463
msgid "Class"
msgstr ""

# cf3ea27ce84c46d9b011cae65e1b432d
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:463
msgid "Description"
msgstr ""

# 0a83bfb387004ede862e1b7355661ce3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:465
msgid "singleSymbol"
msgstr ""

# 3cefb0e5e72d4a4e95b8a880ee1f4cda
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:465
msgid ":class:`QgsSingleSymbolRendererV2`"
msgstr ""

# d06948d60b2341c6ac2ebe58908b7b62
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:465
msgid "Renders all features with the same symbol"
msgstr ""

# a5f53d64c730411fb290fef91c97623a
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:466
msgid "categorizedSymbol"
msgstr ""

# 035c398cfe4a4670bfd448852249f84f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:466
msgid ":class:`QgsCategorizedSymbolRendererV2`"
msgstr ""

# 060d145602ee4e8d9ea1197cc93021a3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:466
msgid "Renders features using a different symbol for each category"
msgstr ""

# ae53f35c7e4d4c6fa7b4dcb7d3fe74d5
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:467
msgid "graduatedSymbol"
msgstr ""

# eb0b61890b304b4cbb23afb4b436fcb6
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:467
msgid ":class:`QgsGraduatedSymbolRendererV2`"
msgstr ""

# 3e5dc33dc5fe4dcea88658758104430b
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:467
msgid "Renders features using a different symbol for each range of values"
msgstr ""

# 16ed056913ab42ab9d308da15726f9d8
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:470
msgid ""
"There might be also some custom renderer types, so never make an assumption "
"there are just these types. You can query :class:`QgsRendererV2Registry` "
"singleton to find out currently available renderers."
msgstr ""

# 649c958d504847799f9b7c44eae38c4f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:474
msgid ""
"It is possible to obtain a dump of a renderer contents in text form --- can "
"be useful for debugging::"
msgstr ""

# 38a875c3b7714f4c8f98e1d0bbf1836d
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:482
msgid "Single Symbol Renderer"
msgstr ""

# bc3dca6705474378bde9304996367c25
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:484
msgid ""
"You can get the symbol used for rendering by calling :func:`symbol` method "
"and change it with :func:`setSymbol` method (note for C++ devs: the renderer "
"takes ownership of the symbol.)"
msgstr ""

# 165e2b93a79a4b49b5d2cb321afd08b3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:491
msgid "Categorized Symbol Renderer"
msgstr ""

# 9f0415c478894057a60fb6a637576cdf
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:493
msgid ""
"You can query and set attribute name which is used for classification: use :"
"func:`classAttribute` and :func:`setClassAttribute` methods."
msgstr ""

# 00c3d41f64c94e06890053bbb788567a
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:496
msgid "To get a list of categories::"
msgstr ""

# 7de30a2527944e9fb6167f10e1f6eef1
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:501
msgid ""
"Where :func:`value` is the value used for discrimination between "
"categories, :func:`label` is a text used for category description and :func:"
"`symbol` method returns assigned symbol."
msgstr ""

# 73a43bd8e3b1463bb7ac0c714da344a7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:505
msgid ""
"The renderer usually stores also original symbol and color ramp which were "
"used for the classification: :func:`sourceColorRamp` and :func:"
"`sourceSymbol` methods."
msgstr ""

# ea2097c96f854d56841e12813567d2e8
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:511
msgid "Graduated Symbol Renderer"
msgstr ""

# 478b1053c46046299ac3a5ccc2aef2f4
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:513
msgid ""
"This renderer is very similar to the categorized symbol renderer described "
"above, but instead of one attribute value per class it works with ranges of "
"values and thus can be used only with numerical attributes."
msgstr ""

# df8b35e7447744a489a3cbb798c04b15
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:517
msgid "To find out more about ranges used in the renderer::"
msgstr ""

# 878a439460114e279204d683924d72a5
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:527
msgid ""
"you can again use :func:`classAttribute` to find out classification "
"attribute name, :func:`sourceSymbol` and :func:`sourceColorRamp` methods.  "
"Additionally there is :func:`mode` method which determines how the ranges "
"were created: using equal intervals, quantiles or some other method."
msgstr ""

# 74a54293d2a44358a682a01c82216c8b
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:532
msgid ""
"If you wish to create your own graduated symbol renderer you can do so as "
"illustrated in the example snippet below (which creates a simple two class "
"arrangement)::"
msgstr ""

# 658dc74f214c43ef82b1330bb5c844c9
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:589
msgid "Working with Symbols"
msgstr ""

# a5fe6207ffa84283977941e7cdaf49bd
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:591
msgid ""
"For representation of symbols, there is :class:`QgsSymbolV2` base class with "
"three derived classes:"
msgstr ""

# 1a0cd8db35d94f49a8309585d266f1a0
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:594
msgid ":class:`QgsMarkerSymbolV2` - for point features"
msgstr ""

# 2b717b1acbaa4c949aa2dc09204704b1
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:595
msgid ":class:`QgsLineSymbolV2` - for line features"
msgstr ""

# cb650f68c4e74719a4bc1fc2a304eb6f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:596
msgid ":class:`QgsFillSymbolV2` - for polygon features"
msgstr ""

# 84e83c88a9b54b89b60d0ec7086f204c
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:598
msgid ""
"**Every symbol consists of one or more symbol layers** (classes derived "
"from :class:`QgsSymbolLayerV2`). The symbol layers do the actual rendering, "
"the symbol class itself serves only as a container for the symbol layers."
msgstr ""

# 78827d57e3c14829bdcb08220ea006bc
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:602
msgid ""
"Having an instance of a symbol (e.g. from a renderer), it is possible to "
"explore it: :func:`type` method says whether it is a marker, line or fill "
"symbol. There is a :func:`dump` method which returns a brief description of "
"the symbol. To get a list of symbol layers::"
msgstr ""

# c4c8dd79b4244238a929ef31756f5a6f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:611
msgid ""
"To find out symbol's color use :func:`color` method and :func:`setColor` to "
"change its color. With marker symbols additionally you can query for the "
"symbol size and rotation with :func:`size` and :func:`angle` methods, for "
"line symbols there is :func:`width` method returning line width."
msgstr ""

# 46f56c234b86435b86f99ff242ac5bf0
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:616
msgid "Size and width are in millimeters by default, angles are in degrees."
msgstr ""

# c8eb133c4f3d4892b9dc80979fb4b0f2
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:621
msgid "Working with Symbol Layers"
msgstr ""

# 5d31da51f2694811a7643e98ed8d608e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:623
msgid ""
"As said before, symbol layers (subclasses of :class:`QgsSymbolLayerV2`) "
"determine the appearance of the features.  There are several basic symbol "
"layer classes for general use. It is possible to implement new symbol layer "
"types and thus arbitrarily customize how features will be rendered. The :"
"func:`layerType` method uniquely identifies the symbol layer class --- the "
"basic and default ones are SimpleMarker, SimpleLine and SimpleFill symbol "
"layers types."
msgstr ""

# 785ae28330924c448bb16c94dc314f1e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:630
msgid ""
"You can get a complete list of the types of symbol layers you can create for "
"a given symbol layer class like this::"
msgstr ""

# dc6601ee66e146f39e147388e5bcb0b7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:639
msgid "Output::"
msgstr ""

# 12846e45ff5a4cd38f62975c55239830
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:647
msgid ""
":class:`QgsSymbolLayerV2Registry` class manages a database of all available "
"symbol layer types."
msgstr ""

# 40218c1e018044209b2d19c7cd75551b
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:650
msgid ""
"To access symbol layer data, use its :func:`properties` method that returns "
"a key-value dictionary of properties which determine the appearance. Each "
"symbol layer type has a specific set of properties that it uses. "
"Additionally, there are generic methods :func:`color`, :func:`size`, :func:"
"`angle`, :func:`width` with their setter counterparts. Of course size and "
"angle is available only for marker symbol layers and width for line symbol "
"layers."
msgstr ""

# 7486402e0b584f5fb8460efca1fb5fd0
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:660
msgid "Creating Custom Symbol Layer Types"
msgstr ""

# 2b5727ce4d3543a7858bf11ff0a57951
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:662
msgid ""
"Imagine you would like to customize the way how the data gets rendered. You "
"can create your own symbol layer class that will draw the features exactly "
"as you wish. Here is an example of a marker that draws red circles with "
"specified radius::"
msgstr ""

# cc913fafafb04c2b838a8a9646e50ee9
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:697
msgid ""
"The :func:`layerType` method determines the name of the symbol layer, it has "
"to be unique among all symbol layers. Properties are used for persistence of "
"attributes. :func:`clone` method must return a copy of the symbol layer with "
"all attributes being exactly the same. Finally there are rendering methods: :"
"func:`startRender` is called before rendering first feature, :func:"
"`stopRender` when rendering is done. And :func:`renderPoint` method which "
"does the rendering. The coordinates of the point(s) are already transformed "
"to the output coordinates."
msgstr ""

# 50e34a951ef044cc9dbf21a0f60daa84
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:706
msgid ""
"For polylines and polygons the only difference would be in the rendering "
"method: you would use :func:`renderPolyline` which receives a list of lines, "
"resp. :func:`renderPolygon` which receives list of points on outer ring as a "
"first parameter and a list of inner rings (or None) as a second parameter."
msgstr ""

# 2d233323bbea413cb59260a38d2785e9
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:711
msgid ""
"Usually it is convenient to add a GUI for setting attributes of the symbol "
"layer type to allow users to customize the appearance: in case of our "
"example above we can let user set circle radius. The following code "
"implements such widget::"
msgstr ""

# dc2068415bde449486590292b64584a7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:744
msgid ""
"This widget can be embedded into the symbol properties dialog. When the "
"symbol layer type is selected in symbol properties dialog, it creates an "
"instance of the symbol layer and an instance of the symbol layer widget. "
"Then it calls :func:`setSymbolLayer` method to assign the symbol layer to "
"the widget. In that method the widget should update the UI to reflect the "
"attributes of the symbol layer. :func:`symbolLayer` function is used to "
"retrieve the symbol layer again by the properties dialog to use it for the "
"symbol."
msgstr ""

# d46f36592dfd46eb9d1fd3a92f4d5615
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:752
msgid ""
"On every change of attributes, the widget should emit :func:`changed()` "
"signal to let the properties dialog update the symbol preview."
msgstr ""

# 37ef88fa67fb4b62896e443c17555a9f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:755
msgid ""
"Now we are missing only the final glue: to make QGIS aware of these new "
"classes. This is done by adding the symbol layer to registry. It is possible "
"to use the symbol layer also without adding it to the registry, but some "
"functionality will not work: e.g. loading of project files with the custom "
"symbol layers or inability to edit the layer's attributes in GUI."
msgstr ""

# 6b3ff81b42294599b8e3049578f62fbe
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:761
msgid "We will have to create metadata for the symbol layer::"
msgstr ""

# 341465124f55411dbe35891e46f72361
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:777
msgid ""
"You should pass layer type (the same as returned by the layer) and symbol "
"type (marker/line/fill) to the constructor of parent class. :func:"
"`createSymbolLayer` takes care of creating an instance of symbol layer with "
"attributes specified in the `props` dictionary. (Beware, the keys are "
"QString instances, not \"str\" objects). And there is :func:"
"`createSymbolLayerWidget` method which returns settings widget for this "
"symbol layer type."
msgstr ""

# f5fe309e573e4d28ba2f5cf4d0797935
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:784
msgid ""
"The last step is to add this symbol layer to the registry --- and we are "
"done."
msgstr ""

# 527c8f8723154a10954da18f3be841e2
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:790
msgid "Creating Custom Renderers"
msgstr ""

# 1a6f8b9ce6e6411f976b20a147aa532c
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:792
msgid ""
"It might be useful to create a new renderer implementation if you would like "
"to customize the rules how to select symbols for rendering of features. Some "
"use cases where you would want to do it: symbol is determined from a "
"combination of fields, size of symbols changes depending on current scale "
"etc."
msgstr ""

# 7657791708b44f1891d77923323c6836
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:797
msgid ""
"The following code shows a simple custom renderer that creates two marker "
"symbols and chooses randomly one of them for every feature::"
msgstr ""

# ac60d615e6234b729af928c56a775384
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:824
msgid ""
"The constructor of parent :class:`QgsFeatureRendererV2` class needs renderer "
"name (has to be unique among renderers). :func:`symbolForFeature` method is "
"the one that decides what symbol will be used for a particular feature. :"
"func:`startRender` and :func:`stopRender` take care of initialization/"
"finalization of symbol rendering. :func:`usedAttributes` method can return a "
"list of field names that renderer expects to be present. Finally :func:"
"`clone` function should return a copy of the renderer."
msgstr ""

# bea70508106a4bf283c2842a9814def0
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:832
msgid ""
"Like with symbol layers, it is possible to attach a GUI for configuration of "
"the renderer. It has to be derived from :class:`QgsRendererV2Widget`. The "
"following sample code creates a button that allows user to set symbol of the "
"first symbol::"
msgstr ""

# 9ed389c2418442e6800fdaa3573ba3e1
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:861
msgid ""
"The constructor receives instances of the active layer (:class:"
"`QgsVectorLayer`), the global style (:class:`QgsStyleV2`) and current "
"renderer. If there is no renderer or the renderer has different type, it "
"will be replaced with our new renderer, otherwise we will use the current "
"renderer (which has already the type we need). The widget contents should be "
"updated to show current state of the renderer. When the renderer dialog is "
"accepted, widget's :func:`renderer` method is called to get the current "
"renderer --- it will be assigned to the layer."
msgstr ""

# b6626ec0cb794433b75dfbf2a9ab69ef
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:870
msgid ""
"The last missing bit is the renderer metadata and registration in registry, "
"otherwise loading of layers with the renderer will not work and user will "
"not be able to select it from the list of renderers. Let us finish our "
"RandomRenderer example::"
msgstr ""

# 4229078e4c3c4f66920d20d98cc11251
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:886
msgid ""
"Similarly as with symbol layers, abstract metadata constructor awaits "
"renderer name, name visible for users and optionally name of renderer's "
"icon. :func:`createRenderer` method passes :class:`QDomElement` instance "
"that can be used to restore renderer's state from DOM tree. :func:"
"`createRendererWidget` method creates the configuration widget. It does not "
"have to be present or can return `None` if the renderer does not come with "
"GUI."
msgstr ""

# 687ee71de681418192a04ac4a870742c
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:893
msgid ""
"To associate an icon with the renderer you can assign it in :class:"
"`QgsRendererV2AbstractMetadata` constructor as a third (optional) argument "
"--- the base class constructor in the RandomRendererMetadata :func:"
"`__init__` function becomes::"
msgstr ""

# c637f086348d41289f2b422e33989ef3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:903
msgid ""
"The icon can be associated also at any later time using :func:`setIcon` "
"method of the metadata class. The icon can be loaded from a file (as shown "
"above) or can be loaded from a `Qt resource <http://qt.nokia.com/doc/4.5/"
"resources.html>`_ (PyQt4 includes .qrc compiler for Python)."
msgstr ""

# 742301336b72442894419df656fc4055
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:909
msgid "Further Topics"
msgstr ""

# b6450630d5ae4004b6a0343bb4a1c8b1
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:912
msgid "creating/modifying symbols"
msgstr ""

# 86ff0efebcac41a1b2987c57f37bab70
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:913
msgid "working with style (:class:`QgsStyleV2`)"
msgstr ""

# a425f27fd58f43a7b52670edb91c9eec
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:914
msgid "working with color ramps (:class:`QgsVectorColorRampV2`)"
msgstr ""

# 885fd705c8414927ade0ff914fa31435
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:915
msgid "rule-based renderer"
msgstr ""

# 6c43883c98f14254b5267cbde8abc8fc
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:916
msgid "exploring symbol layer and renderer registries"
msgstr ""

# ae0f860c5e214e73981bd514161fc05a
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:921
msgid "Old Symbology"
msgstr ""

# f5bd8ba772854559976a81ce3042b2c3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:923
msgid ""
"A symbol determines color, size and other properties of the feature. "
"Renderer associated with the layer decides what symbol will be used for "
"particular feature. There are four available renderers:"
msgstr ""

# d980f26ce4c0441bb97063873546d112
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:927
msgid ""
"single symbol renderer (:class:`QgsSingleSymbolRenderer`) --- all features "
"are rendererd with the same symbol."
msgstr ""

# d843bfc86c3e4056880ec31a2ee32d1f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:929
msgid ""
"unique value renderer (:class:`QgsUniqueValueRenderer`) --- symbol for each "
"feature is choosen from attribute value."
msgstr ""

# 49d1ea029cc9402785d9fedec8dccaad
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:931
msgid ""
"graduated symbol renderer (:class:`QgsGraduatedSymbolRenderer`) --- a symbol "
"is applied to a subgroup (class) of features, which is calculated on a "
"numeric field"
msgstr ""

# 05822129a4a54a0ea03bd8ea9c2c64e3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:934
msgid "continuous color renderer (:class:`QgsContinuousSymbolRenderer`)"
msgstr ""

# 21b08283340a416cbc4bec01679c170e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:936
msgid "How to create a point symbol::"
msgstr ""

# f98d49bb4d7f4fe3b3cd6770f4740170
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:946
msgid ""
"The :func:`setNamedPointSymbol` method determines the shape of the symbol. "
"There are two classes: hardcoded symbols (prefixed ``hard:``) and SVG "
"symbols (prefixed ``svg:``). The following hardcoded symbols are available: "
"``circle``, ``rectangle``, ``diamond``, ``pentagon``, ``cross``, ``cross2``, "
"``triangle``, ``equilateral_triangle``, ``star``, ``regular_star``, "
"``arrow``."
msgstr ""

# c8f9e432dc2c459ba34a46d4eb96af21
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:952
msgid "How to create an SVG symbol::"
msgstr ""

# 3495ecbf4da24abab67cbdaa06a4175e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:958
msgid "SVG symbols do not support setting colors, fill and line styles."
msgstr ""

# 378c67ca81ce4bad86d51ab9a7b23b9c
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:960
msgid "How to create a line symbol::"
msgstr ""

# 08c4ff8bb87f4361a22d26431b01f1d9
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:964
msgid "How to create a fill symbol::"
msgstr ""

# c5147c3a301444228bcd0779bafa0443
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:968
msgid "Create a single symbol renderer::"
msgstr ""

# fc6085a078384c1982f9d232c7c9bfd0
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:973
msgid "Assign the renderer to a layer::"
msgstr ""

# aae0e5ca58aa4b7bad702a682caa31a8
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:977
msgid "Create unique value renderer::"
msgstr ""

# 465fdcbe63a0449c8d2c1d2d47499d2c
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:981
msgid "Create graduated symbol renderer::"
msgstr ""

# fc48920062bd4731a276655e257e07e4
# d88ad8b4f5c34098964ec58404c1d78a
# 3abc3b98a52c44c28ab63eb3b0dafa41
# 7a71d318590340ae8286fe31d4e0015a
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:14
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:99
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:263
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:409
msgid "vector layers"
msgstr ""

# fc48920062bd4731a276655e257e07e4
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:14
msgid "iterating"
msgstr ""

# fc48920062bd4731a276655e257e07e4
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:14
msgid "features"
msgstr ""

# d88ad8b4f5c34098964ec58404c1d78a
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:99
msgid "editing"
msgstr ""

# ac06f0368bd04ee19c5f52c411aeb3b7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:236
msgid "spatial index"
msgstr ""

# ac06f0368bd04ee19c5f52c411aeb3b7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:236
msgid "using"
msgstr ""

# 3abc3b98a52c44c28ab63eb3b0dafa41
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:263
msgid "writing"
msgstr ""

# 1833a504a04b446080f006865768f0d1
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:329
msgid "memory provider"
msgstr ""

# 7a71d318590340ae8286fe31d4e0015a
# 8552f6870c844ab0818c66abb56c11b0
# c0f167f501c346c0ac8c8430a2d58cdb
# 12c044e591674a5b99d52e8c4b8b9dc3
# 3b0ed9364c0f449686f33984115c5fae
# 7fd99d22612e4ba7a4031688937bc760
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:409
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:450
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:479
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:488
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:508
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:918
msgid "symbology"
msgstr ""

# 8552f6870c844ab0818c66abb56c11b0
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:450
msgid "new"
msgstr ""

# c0f167f501c346c0ac8c8430a2d58cdb
# c0f167f501c346c0ac8c8430a2d58cdb
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:479
msgid "single symbol renderer"
msgstr ""

# 12c044e591674a5b99d52e8c4b8b9dc3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:488
msgid "categorized symbology renderer"
msgstr ""

# 12c044e591674a5b99d52e8c4b8b9dc3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:488
msgid "categorized symbol renderer"
msgstr ""

# 3b0ed9364c0f449686f33984115c5fae
# 3b0ed9364c0f449686f33984115c5fae
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:508
msgid "graduated symbol renderer"
msgstr ""

# 5f9a14f1991b47c8bf0f9b34fe095624
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:586
msgid "symbols"
msgstr ""

# 5f9a14f1991b47c8bf0f9b34fe095624
# e4f235453b7d44ddbc0e616c079068c2
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:586
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:618
msgid "working with"
msgstr ""

# e4f235453b7d44ddbc0e616c079068c2
# 752a33d4d3ea411db84cb1a56363de1c
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:618
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:657
msgid "symbol layers"
msgstr ""

# 752a33d4d3ea411db84cb1a56363de1c
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:657
msgid "creating custom types"
msgstr ""

# 15d28b41d42747b7b68c9ee71559d890
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:786
msgid "custom"
msgstr ""

# 15d28b41d42747b7b68c9ee71559d890
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:786
msgid "renderers"
msgstr ""

# 7fd99d22612e4ba7a4031688937bc760
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:918
msgid "old"
msgstr ""
